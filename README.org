* Bonding

  The one to bind(bond) all your network interfaces


#+BEGIN_EXAMPLE
               Three::rings
          for:::the::Elven-Kings
       under:the:sky,:Seven:for:the
     Dwarf-Lords::in::their::halls:of
    stone,:Nine             for:Mortal
   :::Men:::     ________     doomed::to
 die.:One   _,-'...:... `-.    for:::the
 ::Dark::  ,- .:::::::::::. `.   Lord::on
his:dark ,'  .:::::zzz:::::.  `.  :throne:
In:::the/    ::::dMMMMMb::::    \ Land::of
:Mordor:\    ::::dMMmgJP::::    / :where::
::the::: '.  '::::YMMMP::::'  ,'  Shadows:
 lie.::One  `. ``:::::::::'' ,'    Ring::to
 ::rule::    `-._```:'''_,-'     ::them::
 all,::One      `-----'        ring::to
   ::find:::                  them,:One
    Ring:::::to            bring::them
      all::and::in:the:darkness:bind
        them:In:the:Land:of:Mordor
           where:::the::Shadows
                :::lie.:::
#+END_EXAMPLE

** Install

   #+BEGIN_SRC sh
   git clone https://github.com/cjoelrun/bonding
   mkvirtualenv bonding
   cd bonding
   pip install -r requirements
   #+END_SRC

** Bond

   Populate that hosts file:
   #+BEGIN_EXAMPLE
   [hosts]
   192.168.101.1
   #+END_EXAMPLE

   Bond those interfaces:
   #+BEGIN_SRC sh
   ansible-playbook -i hosts site.yml -c paramiko
   #+END_SRC

   If you don't use keypairs:
   #+BEGIN_SRC sh
   ansible-playbook -k -u root -i hosts site.yml -c paramiko
   #+END_SRC

   To reboot and begin to bond:
   #+BEGIN_SRC sh
   ansible all -m command -a "/sbin/reboot now" -k -i hosts -u root -c paramiko
   #+END_SRC
